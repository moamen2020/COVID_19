{"version":3,"sources":["api/index.js","components/Cards/Cards.js","components/CountryPicker/CountrtPicker.js","components/Chart/Chart.js","App.js","index.js"],"names":["url","fethData","country","a","changed","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyDate","modifiedData","map","dialyData","total","date","reportDate","fetchCountries","countries","name","Cards","className","start","end","value","duration","separator","Date","toDateString","CountryPicker","handelCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","onChange","e","target","i","key","Chart","dailyDate","setDailyDate","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","app","state","fethedData","setState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17eac2ec.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fethData = async (country) => {\r\n\r\n    let changed = url;\r\n\r\n    if(country) {\r\n        changed = `${url}/countries/${country}`\r\n    }\r\n\r\n\r\n    const {data : { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changed); \r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n}\r\n\r\n\r\nexport const fetchDailyDate = async () => {\r\n\r\n\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dialyData) => ({\r\n        confirmed: dialyData.confirmed.total,\r\n        deaths: dialyData.deaths.total,\r\n        date: dialyData.reportDate\r\n\r\n    }));\r\n\r\n    return modifiedData;\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n    \r\n}\r\n","import React from 'react';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\n\r\n\r\nconst Cards = ({ data : { confirmed, deaths, lastUpdate, recovered } }) => {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"parent confirmed\">\r\n                <p className='para'>confirmed</p>\r\n                <h5 className='h51'>\r\n                    <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                </h5>\r\n                <h5 className='h52'>{new Date(lastUpdate).toDateString()}</h5>\r\n                <div className='last'>Number of active of COVID-19</div>\r\n            </div>\r\n            <div className=\"parent recovered\">\r\n                <p className='para'>recovered</p>\r\n                <h5 className='h51'>\r\n                    <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                </h5>\r\n                <h5 className='h52'>{new Date(lastUpdate).toDateString()}</h5>\r\n                <div className='last'>Number of recoveries of COVID-19</div>\r\n            </div>\r\n            <div className=\"parent deaths\">\r\n                <p className='para'>deaths</p>\r\n                <h5 className='h51'>\r\n                    <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                </h5>\r\n                <h5 className='h52'>{new Date(lastUpdate).toDateString()}</h5>\r\n                <div className='last'>Number of active of COVID-19</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handelCountryChange }) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <select className='option' onChange={(e) => handelCountryChange(e.target.value)}>\r\n                <option value=''>Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CountryPicker;\r\n\r\n\r\n// ","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyDate } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst Chart = ({ data : {confirmed, recovered, deaths}, country }) => {\r\n\r\n\r\n\r\n    const [dailyDate, setDailyDate] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyDate(await fetchDailyDate());\r\n        }\r\n\r\n        fetchAPI();\r\n    });\r\n\r\n    const lineChart = (\r\n        dailyDate.length\r\n        ? (\r\n            <Line \r\n            data = {{\r\n                labels: dailyDate.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyDate.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true\r\n                }, {\r\n                    data: dailyDate.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true\r\n                }]\r\n            }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n\r\n    const barChart = (\r\n        confirmed \r\n        ? (\r\n            <Bar\r\n                data= {{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(0, 0, 255, 0.5)',\r\n                            'rgba(0, 255, 0, 0.5)',\r\n                            'rgba(255, 0, 0, 0.5)'\r\n                        ],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: {display: false},\r\n                    title: { display: true, text: `Current state in ${country}` }\r\n                }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {country ? barChart  : lineChart}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Chart;","import React, { Component } from 'react';\nimport './App.css';\nimport { fethData } from './api/index';\nimport Cards from './components/Cards/Cards';\nimport CountryPicker from './components/CountryPicker/CountrtPicker';\nimport Chart from './components/Chart/Chart';\n\n\n\nclass app extends Component {\n\n  state = {\n    data : {},\n    country: ''\n  }\n\n  async componentDidMount() {\n    const fethedData = await fethData();\n\n    this.setState({data : fethedData});\n  }\n\n  handelCountryChange = async (country) => {\n    const fethedData = await fethData(country);\n\n    this.setState({ data: fethedData, country: country});\n\n  }\n\n\n  render() { \n    return (\n      <div className='App'>\n        <Cards data={this.state.data} />\n        <CountryPicker handelCountryChange={this.handelCountryChange} />\n        <Chart country={this.state.country} data={this.state.data} />\n      </div>\n    );\n  }\n}\n \nexport default app;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}